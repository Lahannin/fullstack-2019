{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","phonebookService.js","components/App.js","index.js"],"names":["Filter","_ref","handleInputChange","react_default","a","createElement","htmlFor","type","id","name","onChange","PersonForm","props","onSubmit","required","Persons","filtered","Object","toConsumableArray","persons","filter","person","toLowerCase","includes","rows","map","key","number","onClick","e","removeNumber","Number","target","Notification","notificationSettings","styles","border","concat","style","backgroundColor","paddingLeft","color","fontWeight","message","apiUrl","phonebookService","axios","get","newPerson","post","delete","App","_useState","useState","_useState2","slicedToArray","setPersons","_useState3","phone","_useState4","setNewPerson","_useState5","_useState6","setFilter","_useState7","_useState8","setNotificationSettings","useEffect","then","response","data","catch","error","showNotification","time","setTimeout","value","console","components_Notification","components_PersonForm","preventDefault","some","status","components_Filter","components_Persons","selected_index","findIndex","window","confirm","copy","removed","splice","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.4d7e6048.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({handleInputChange}) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"filter\">Filter shown with</label>\r\n            <input type=\"text\" id=\"filter\" name=\"filter\" onChange={handleInputChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n            <label htmlFor=\"name\">Name: </label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" onChange={props.handleInputChange} required />\r\n            <br />\r\n            <label htmlFor=\"number\">Number: </label>\r\n            <input type=\"tel\" id=\"number\" name=\"number\" onChange={props.handleInputChange} required />\r\n            <br />\r\n            <button type=\"submit\">Add</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PersonForm;","import React from \"react\";\r\n\r\nconst Persons = (props) => {\r\n    // Parsitaan rivit ja otetaan mahdollinen filtteri huomioon\r\n    let filtered = [...props.persons];\r\n    if(props.filter){\r\n        filtered = filtered.filter((person) => {\r\n            return person.name.toLowerCase().includes(props.filter);\r\n        });\r\n    }\r\n\r\n    const rows = filtered.map((person) => {\r\n        return (<li key={person.name}>{person.name} {person.number} <button id={person.id} type=\"button\" onClick={(e) => props.removeNumber(Number(e.target.id))}>remove</button></li>);\r\n    });\r\n\r\n    return (\r\n        <ul>\r\n            {rows}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Persons;","import React from \"react\";\r\n\r\nconst Notification = ({notificationSettings}) => {\r\n    const styles = {\r\n        border: `5px solid ${notificationSettings.style === \"success\" ? \"green\" : \"red\"}`,\r\n        backgroundColor: \" #bfc9ca\",\r\n        paddingLeft: \"5px\",\r\n        color: notificationSettings.style === \"success\" ? \"green\" : \"red\",\r\n        fontWeight : \"bold\"\r\n    };\r\n\r\n    if(notificationSettings.message){\r\n        return (<div style={styles}><p>{notificationSettings.message}</p></div>);\r\n    }\r\n    else{\r\n        return (<div></div>);\r\n    }\r\n};\r\n\r\nexport default Notification;","import axios from \"axios\";\r\n\r\nconst apiUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    return axios.get(apiUrl);\r\n};\r\nconst saveNewPerson = (newPerson) => {\r\n    return axios.post(apiUrl,newPerson);\r\n};\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${apiUrl}/${id}`);\r\n};\r\nconst replacePerson = (id,newPerson) => {\r\n    return axios.put(`${apiUrl}/${id}`,newPerson);\r\n};\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    saveNewPerson: saveNewPerson,\r\n    deletePerson: deletePerson,\r\n    replacePerson: replacePerson\r\n};","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Filter from \"./Filter\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport Persons from \"./Persons\";\r\nimport Notification from \"./Notification\";\r\n\r\nimport phonebookService from \"../phonebookService\"\r\n\r\nconst App = () => {\r\n    // Tilat\r\n    const [persons,setPersons] = useState([]);\r\n    const [newPerson,setNewPerson] = useState({\r\n        name: null,\r\n        phone: null\r\n    });\r\n    const [filter,setFilter] = useState(null);\r\n    const [notificationSettings,setNotificationSettings] = useState({\r\n        message: null,\r\n        style: null\r\n    });\r\n\r\n    // Alkutilan hakeminen\r\n    useEffect(() => {\r\n        phonebookService.getAll().then((response) => {\r\n            // OK\r\n            setPersons(response.data);\r\n        }).catch((error) => {\r\n            // Virhe\r\n            throw error;\r\n        });\r\n    },[]);\r\n\r\n    const showNotification = (message,time,style) => {\r\n        setNotificationSettings({\r\n            message: message,\r\n            style: style\r\n        });\r\n        setTimeout(() => {\r\n            setNotificationSettings({\r\n                message: null,\r\n                style: null\r\n            });\r\n        },time * 1000);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        // Minusta on fiksumpaa, että on vain yksi muutoksenkäsittelijä input-kentille\r\n        switch(e.target.name){\r\n            case \"name\":\r\n                setNewPerson({\r\n                    name: e.target.value,\r\n                    number: newPerson.number\r\n                });\r\n                break;\r\n            case \"number\":\r\n                setNewPerson({\r\n                    name: newPerson.name,\r\n                    number: e.target.value\r\n                });\r\n                break;\r\n            case \"filter\":\r\n                setFilter(e.target.value.toLowerCase());\r\n                break;\r\n            default:\r\n                console.error(\"Jokin meni nyt pieleen!\");\r\n        }\r\n    };\r\n    const addNumber = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!persons.some(person => person.name === newPerson.name)){\r\n            //setPersons(persons.concat(newPerson));\r\n            phonebookService.saveNewPerson(newPerson).then((response) => {\r\n                // OK\r\n                //console.log(response);\r\n                if(response.status === 201){\r\n                    // Haetaan kaikki uudelleen palvelimelta, jotta saadaan varmasti oikeat id:t\r\n                    phonebookService.getAll().then((response) => {\r\n                        // OK\r\n                        setPersons(response.data);\r\n                        showNotification(`Added ${newPerson.name}`,3,\"success\");\r\n                    });\r\n                }\r\n                else{\r\n                    showNotification(`Something odd happened while adding ${newPerson.name}. HTTP response was ${response.status} when 201 was expected`,5,\"failure\");\r\n                }\r\n            }).catch((error) => {\r\n                // Virhe\r\n                console.error(error);\r\n                showNotification(`Failed to add ${newPerson.name}. Error code ${error.status}`,5,\"failure\");\r\n            });\r\n        }\r\n        /*else if(window.confirm(\"That person is already on the list. Do you want to replace the old number with the new one?\")){\r\n            const id = persons.find((person) => {\r\n                return person.name === newPerson.name;\r\n            }).id;\r\n            phonebookService.replacePerson(id,newPerson).then(() => {\r\n                //console.log(persons);\r\n                let copy = [...persons];\r\n                const selected_index = copy.findIndex((person) => {\r\n                    return person.id === id;\r\n                });\r\n                copy[selected_index] = newPerson;\r\n                copy[selected_index].id = id; // Id palvelimella ei muutu päivityksen yhteydessä\r\n                setPersons(copy);\r\n                showNotification(`Modified ${newPerson.name}`,3,\"success\");\r\n            }).catch((error) => {\r\n                console.error(error);\r\n                showNotification(`Failed to modify ${newPerson.name}`,5,\"failure\");\r\n            });\r\n        }*/\r\n        //console.log(persons);\r\n    };\r\n    const removeNumber = (id) => {\r\n        //console.log(persons);\r\n        // Haetaan tämän henkilön sijainti taulukossa\r\n        const selected_index = persons.findIndex((person) => {\r\n            return person.id === id;\r\n        });\r\n\r\n        if(window.confirm(`Are you sure? ${persons[selected_index].name} might get upset...`)){\r\n            phonebookService.deletePerson(id).then(() => {\r\n                let copy = [...persons];\r\n                const removed = copy.splice(selected_index,1); // Poistetaan olio myös paikallisesta kopiosta\r\n                showNotification(`Removed ${removed[0].name}`,3,\"success\");\r\n                setPersons(copy);\r\n            }).catch((error) => {\r\n                console.error(error);\r\n                showNotification(`Information of ${persons[selected_index].name} has already been removed from the server. Please refresh the page.`,5,\"failure\");\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n\r\n            <Notification notificationSettings={notificationSettings} />\r\n\r\n            <h2>Add new number</h2>\r\n            <PersonForm onSubmit={addNumber} handleInputChange={handleInputChange} />\r\n             \r\n            <h2>Numbers</h2>\r\n            <Filter handleInputChange={handleInputChange} />\r\n            <Persons persons={persons} filter={filter} removeNumber={removeNumber} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />,document.getElementById(\"root\"));"],"sourceRoot":""}